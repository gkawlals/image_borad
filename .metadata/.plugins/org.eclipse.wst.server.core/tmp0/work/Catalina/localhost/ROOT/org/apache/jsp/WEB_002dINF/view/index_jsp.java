/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.58
 * Generated at: 2021-06-07 08:54:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import poly.util.CmmUtil;
import java.util.List;
import poly.dto.ImageDTO;
import poly.dto.UserDTO;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("poly.dto.ImageDTO");
    _jspx_imports_classes.add("poly.dto.UserDTO");
    _jspx_imports_classes.add("poly.util.CmmUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	
	String user_id = CmmUtil.nvl((String)session.getAttribute("SS_USER_ID"));
	ImageDTO title = new ImageDTO();

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\"\r\n");
      out.write("          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Facebook Meta Tags / 페이스북 오픈 그래프 -->\r\n");
      out.write("    <meta property=\"og:url\" content=\"http://kindtiger.dothome.co.kr/insta\">\r\n");
      out.write("    <meta property=\"og:type\" content=\"website\">\r\n");
      out.write("    <meta property=\"og:title\" content=\"instagram\">\r\n");
      out.write("    <meta property=\"og:description\" content=\"instagram clone\">\r\n");
      out.write("    <meta property=\"og:image\" content=\"http://kindtiger.dothome.co.kr/insta/imgs/instagram.jpeg\">\r\n");
      out.write("    <!-- Twitter Meta Tags / 트위터 -->\r\n");
      out.write("    <meta name=\"twitter:card\" content=\"instagram clone\">\r\n");
      out.write("    <meta name=\"twitter:title\" content=\"instagram\">\r\n");
      out.write("    <meta name=\"twitter:description\" content=\"instagram clone\">\r\n");
      out.write("    <meta name=\"twitter:image\" content=\"http://kindtiger.dothome.co.kr/insta/imgs/instagram.jpeg\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Google / Search Engine Tags / 구글 검색 엔진 -->\r\n");
      out.write("    <meta itemprop=\"name\" content=\"instagram\">\r\n");
      out.write("    <meta itemprop=\"description\" content=\"instagram clone\">\r\n");
      out.write("    <meta itemprop=\"image\" content=\"http://kindtiger.dothome.co.kr/insta/imgs/instagram.jpeg\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../resourceImg/css/reset.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../resourceImg/css/common.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../resourceImg/css/style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../resourceImg/css/profile.css\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"../resourceImg/imgs/instagram.png\">\r\n");
      out.write("    <script\r\n");
      out.write("   src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>J\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<select id=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t<header id=\"header\">\r\n");
      out.write("        <section class=\"inner\">\r\n");
      out.write("            <h1 class=\"logo\">\r\n");
      out.write("                <a href=\"index.html\">\r\n");
      out.write("                    <div class=\"sprite_insta_icon\"></div>\r\n");
      out.write("                    <div class=\"sprite_write_logo\"></div>\r\n");
      out.write("                </a>\r\n");
      out.write("            </h1>\r\n");
      out.write("            <div class=\"search_box\">\r\n");
      out.write("                <input type=\"text\" placeholder=\"검색\" id=\"search-field\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"fake_field\">\r\n");
      out.write("                    <span class=\"sprite_small_search_icon\"></span>\r\n");
      out.write("                    <span>검색</span>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"right_icons\">\r\n");
      out.write("            <form enctype=\"multipart/form-data\" action=\"/image/imageUpload.do\" method=\"post\">\r\n");
      out.write("               <input type=\"file\" name=\"fileUpload\" style=\"display:none\" onchange=\"fileSelect()\">\r\n");
      out.write("               <div class=\"sprite_camera_icon\"\r\n");
      out.write("\t               onclick='document.all.fileUpload.click();' \r\n");
      out.write("\t              \t></div>\r\n");
      out.write("\t\t\t\t<!-- 이미지 파일 저장 -->\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"one_title\" name=\"one_title\" style=\"display:none\"/>\r\n");
      out.write("               \t\t\t<input type=\"submit\" name=\"fileInsert\" style=\"display:none\"/>\r\n");
      out.write("           \t </form>\r\n");
      out.write("           \t <script>\r\n");
      out.write("\t           \t\t\r\n");
      out.write("\t           \t\tfunction fileSelect(){\r\n");
      out.write("\t           \t\t\t\r\n");
      out.write("\t           \t\t\tvar ppt = prompt(\"15자 이내의 간단한 제목을 정해주세요!\",\"\");\r\n");
      out.write("\t           \t\t\t\r\n");
      out.write("\t           \t\t\tif (ppt.length > 0){\r\n");
      out.write("\t           \t\t\t\t\r\n");
      out.write("\t           \t\t\t\t$('input[name=one_title]').attr('value', ppt);\r\n");
      out.write("\t           \t\t\t\t\r\n");
      out.write("\t           \t\t\t\tconsole.log(one_title.value);\r\n");
      out.write("\t           \t\t\t\t\r\n");
      out.write("\t\t           \t\t\tdocument.all.fileInsert.click();\r\n");
      out.write("\t           \t\t\t}else {\r\n");
      out.write("\t           \t\t\t\talert(\" 제목을 지어 주셔야 합니다 !\");\r\n");
      out.write("\t           \t\t\t}\r\n");
      out.write("\t           \t\t}\r\n");
      out.write("\t           \t\t\r\n");
      out.write("\t           </script>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("    </header>\r\n");
      out.write("   </select>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
